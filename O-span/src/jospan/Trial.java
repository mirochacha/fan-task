/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package jospan;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

/**
 *
 * @author admini
 */
public class Trial extends javax.swing.JFrame implements MouseListener, ActionListener {
    javax.swing.Timer OneSecond, PresenT, AfterPresent, FeedBack, NextTrial, TimeLimit, AfterPresent0;
    int MemAns = 1; //再生画面での回答番号
    int TestNum = 4; //1:記銘のみ，2:計算のみ, 3:Span2の練習，4:本番
    int BtnAns = 1; //再生画面でのボタン番号
    int MemOnlyTrial = 0; //記銘のみの試行番号 //試行番号(0～17)
    int SpanCount = 0;//Spanのカウント，試行ごとにリセットされる
    int Score = 0;//Span得点，試行ごとにリセットされる
    int OverallScore; //correct position法によるSpan得点
    int[] CurCountBase = {2,3,4,5,6,7};//3~8から変えた
    int[] CurCount = new int[3 * CurCountBase.length]; //Span数
    int MathOnlyTrial = 0; //計算のみの試行番号
    int MathOnlyCount = 0; //計算のみ練習の得点
    int MathAnsFlag = 0;//計算の答えがわかったら1になる
    int TimeOver = 0;//制限時間オーバーのとき1になる
    double TrialNum = 0; //試行数
    double ErrNum = 0; //計算問題の誤回答数
    int Accur = 0; //計算問題の正答率
    long PresentTime = 0;//計算問題の提示開始時間
    long CalcTime = 0;//計算問題に答え終わった時間
    double sum,sumx2,ave,vari,stdev;
    List list, molist; //ランダム用の配列。ShuffleTestで使う
    String[] CharArray = new String[12]; //記銘用の配列
    StringBuilder AnsString = new StringBuilder();
    StringBuilder ShowString = new StringBuilder();
    String[] MathOnlyArray = new String[100];
    String[] MathOnlyAns = new String[100];
    StringBuilder Outputs = new StringBuilder();
    /**
     * Creates new form Trial
     */
    public Trial() {
        initComponents();
        RecallScreen.setVisible(false);
        OneSecond = new javax.swing.Timer(1000, this);
        OneSecond.setActionCommand("OneSecond");//actionPerformed内での識別用文字列
        PresenT = new javax.swing.Timer(800, this);
        PresenT.setActionCommand("PresenT");
        AfterPresent = new javax.swing.Timer(1, this);
        AfterPresent.setActionCommand("AfterPresent");
        AfterPresent0 = new javax.swing.Timer(800, this); //RecallScreenの前にCharPanelを消す
        AfterPresent0.setActionCommand("AfterPresent0");
        FeedBack = new javax.swing.Timer(250, this);
        FeedBack.setActionCommand("FeedBack");
        NextTrial = new javax.swing.Timer(2000, this);
        NextTrial.setActionCommand("NextTrial");
        TimeLimit = new javax.swing.Timer(SubNum.TimeLimit, this);
        TimeLimit.setActionCommand("TimeLimit");
        MOnlyQPanel.setVisible(false);
        MOnlyAnsPanel.setVisible(false);
        molist = ShuffleMathOnly();
        //System.out.println(molist);
        list = ShuffleTest();


        for(int i=0; i<=2; i++){
            SpanShuffle(CurCountBase);
            System.arraycopy(CurCountBase, 0, CurCount, i*6, CurCountBase.length);
        }
        OneSecond.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MOnlyQPanel = new javax.swing.JPanel();
        MathOnlyQue = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        MOnlyAnsPanel = new javax.swing.JPanel();
        MathOnlyWhich = new javax.swing.JLabel();
        MathInc = new javax.swing.JButton();
        MathCor = new javax.swing.JButton();
        MOnlyFBPanel = new javax.swing.JPanel();
        MOnlyFB = new javax.swing.JLabel();
        MOnlyResult = new javax.swing.JPanel();
        MOnlyResultSum = new javax.swing.JLabel();
        RecallScreen = new javax.swing.JPanel();
        Kyouji1 = new javax.swing.JLabel();
        Kyouji2 = new javax.swing.JLabel();
        OKButton = new javax.swing.JButton();
        ResetButton = new javax.swing.JButton();
        FirstAnswer = new javax.swing.JLabel();
        SecondAnswer = new javax.swing.JLabel();
        ThirdAnswer = new javax.swing.JLabel();
        FourthAnswer = new javax.swing.JLabel();
        FifthAnswer = new javax.swing.JLabel();
        SixthAnswer = new javax.swing.JLabel();
        SeventhAnswer = new javax.swing.JLabel();
        EighthAnswer = new javax.swing.JLabel();
        Fbtn = new javax.swing.JButton();
        Hbtn = new javax.swing.JButton();
        Jbtn = new javax.swing.JButton();
        Kbtn = new javax.swing.JButton();
        Lbtn = new javax.swing.JButton();
        Nbtn = new javax.swing.JButton();
        Pbtn = new javax.swing.JButton();
        Qbtn = new javax.swing.JButton();
        Rbtn = new javax.swing.JButton();
        Sbtn = new javax.swing.JButton();
        Tbtn = new javax.swing.JButton();
        Ybtn = new javax.swing.JButton();
        Unbtn = new javax.swing.JButton();
        labelF = new javax.swing.JLabel();
        LabelK = new javax.swing.JLabel();
        LabelP = new javax.swing.JLabel();
        LabelS = new javax.swing.JLabel();
        LabelH = new javax.swing.JLabel();
        LabelL = new javax.swing.JLabel();
        LabelQ = new javax.swing.JLabel();
        LabelT = new javax.swing.JLabel();
        LAbelJ = new javax.swing.JLabel();
        LabelN = new javax.swing.JLabel();
        LabelR = new javax.swing.JLabel();
        LabelY = new javax.swing.JLabel();
        MemOnlyFeedbackPanel = new javax.swing.JPanel();
        FBText = new javax.swing.JLabel();
        Accuracy = new javax.swing.JLabel();
        Warning = new javax.swing.JLabel();
        CharPanel = new javax.swing.JPanel();
        SpanChar = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);

        MOnlyQPanel.setMaximumSize(new java.awt.Dimension(800, 600));
        MOnlyQPanel.setMinimumSize(new java.awt.Dimension(800, 600));

        MathOnlyQue.setFont(new java.awt.Font("メイリオ", 0, 36)); // NOI18N
        MathOnlyQue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel15.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("答えがわかったらクリックしてください");

        javax.swing.GroupLayout MOnlyQPanelLayout = new javax.swing.GroupLayout(MOnlyQPanel);
        MOnlyQPanel.setLayout(MOnlyQPanelLayout);
        MOnlyQPanelLayout.setHorizontalGroup(
            MOnlyQPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MathOnlyQue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );
        MOnlyQPanelLayout.setVerticalGroup(
            MOnlyQPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MOnlyQPanelLayout.createSequentialGroup()
                .addComponent(MathOnlyQue, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addGap(0, 157, Short.MAX_VALUE))
        );

        MOnlyAnsPanel.setMaximumSize(new java.awt.Dimension(800, 600));
        MOnlyAnsPanel.setMinimumSize(new java.awt.Dimension(800, 600));

        MathOnlyWhich.setFont(new java.awt.Font("メイリオ", 0, 36)); // NOI18N
        MathOnlyWhich.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        MathInc.setFont(new java.awt.Font("メイリオ", 0, 48)); // NOI18N
        MathInc.setText("×");
        MathInc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MathIncActionPerformed(evt);
            }
        });

        MathCor.setFont(new java.awt.Font("メイリオ", 0, 48)); // NOI18N
        MathCor.setText("○");
        MathCor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MathCorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MOnlyAnsPanelLayout = new javax.swing.GroupLayout(MOnlyAnsPanel);
        MOnlyAnsPanel.setLayout(MOnlyAnsPanelLayout);
        MOnlyAnsPanelLayout.setHorizontalGroup(
            MOnlyAnsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MathOnlyWhich, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MOnlyAnsPanelLayout.createSequentialGroup()
                .addContainerGap(160, Short.MAX_VALUE)
                .addComponent(MathCor, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120)
                .addComponent(MathInc, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(160, 160, 160))
        );
        MOnlyAnsPanelLayout.setVerticalGroup(
            MOnlyAnsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MOnlyAnsPanelLayout.createSequentialGroup()
                .addComponent(MathOnlyWhich, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(MOnlyAnsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MathInc, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MathCor, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 82, Short.MAX_VALUE))
        );

        MOnlyFBPanel.setMaximumSize(new java.awt.Dimension(800, 600));
        MOnlyFBPanel.setMinimumSize(new java.awt.Dimension(800, 600));

        MOnlyFB.setFont(new java.awt.Font("メイリオ", 0, 36)); // NOI18N
        MOnlyFB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout MOnlyFBPanelLayout = new javax.swing.GroupLayout(MOnlyFBPanel);
        MOnlyFBPanel.setLayout(MOnlyFBPanelLayout);
        MOnlyFBPanelLayout.setHorizontalGroup(
            MOnlyFBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MOnlyFB, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );
        MOnlyFBPanelLayout.setVerticalGroup(
            MOnlyFBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MOnlyFB, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );

        MOnlyResult.setMaximumSize(new java.awt.Dimension(800, 600));
        MOnlyResult.setMinimumSize(new java.awt.Dimension(800, 600));

        MOnlyResultSum.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        MOnlyResultSum.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout MOnlyResultLayout = new javax.swing.GroupLayout(MOnlyResult);
        MOnlyResult.setLayout(MOnlyResultLayout);
        MOnlyResultLayout.setHorizontalGroup(
            MOnlyResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MOnlyResultSum, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );
        MOnlyResultLayout.setVerticalGroup(
            MOnlyResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MOnlyResultLayout.createSequentialGroup()
                .addComponent(MOnlyResultSum, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 250, Short.MAX_VALUE))
        );

        RecallScreen.setMaximumSize(new java.awt.Dimension(800, 600));
        RecallScreen.setMinimumSize(new java.awt.Dimension(800, 600));
        RecallScreen.setPreferredSize(new java.awt.Dimension(800, 600));

        Kyouji1.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        Kyouji1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Kyouji1.setText("提示された文字を順番に答えてください");

        Kyouji2.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        Kyouji2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Kyouji2.setText("忘れたら「？」を選んでください");

        OKButton.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        OKButton.setText("OK");
        OKButton.setMaximumSize(new java.awt.Dimension(80, 50));
        OKButton.setMinimumSize(new java.awt.Dimension(80, 50));
        OKButton.setPreferredSize(new java.awt.Dimension(80, 50));
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        ResetButton.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        ResetButton.setText("Reset");
        ResetButton.setMaximumSize(new java.awt.Dimension(80, 50));
        ResetButton.setMinimumSize(new java.awt.Dimension(80, 50));
        ResetButton.setPreferredSize(new java.awt.Dimension(80, 50));
        ResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetButtonActionPerformed(evt);
            }
        });

        FirstAnswer.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        FirstAnswer.setMaximumSize(new java.awt.Dimension(65, 65));
        FirstAnswer.setMinimumSize(new java.awt.Dimension(65, 65));
        FirstAnswer.setPreferredSize(new java.awt.Dimension(65, 65));

        SecondAnswer.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        SecondAnswer.setMaximumSize(new java.awt.Dimension(65, 65));
        SecondAnswer.setMinimumSize(new java.awt.Dimension(65, 65));
        SecondAnswer.setPreferredSize(new java.awt.Dimension(65, 65));

        ThirdAnswer.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        ThirdAnswer.setMaximumSize(new java.awt.Dimension(65, 65));
        ThirdAnswer.setMinimumSize(new java.awt.Dimension(65, 65));
        ThirdAnswer.setPreferredSize(new java.awt.Dimension(65, 65));

        FourthAnswer.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        FourthAnswer.setMaximumSize(new java.awt.Dimension(65, 65));
        FourthAnswer.setMinimumSize(new java.awt.Dimension(65, 65));
        FourthAnswer.setPreferredSize(new java.awt.Dimension(65, 65));

        FifthAnswer.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        FifthAnswer.setMaximumSize(new java.awt.Dimension(65, 65));
        FifthAnswer.setMinimumSize(new java.awt.Dimension(65, 65));
        FifthAnswer.setPreferredSize(new java.awt.Dimension(65, 65));

        SixthAnswer.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        SixthAnswer.setMaximumSize(new java.awt.Dimension(65, 65));
        SixthAnswer.setMinimumSize(new java.awt.Dimension(65, 65));
        SixthAnswer.setPreferredSize(new java.awt.Dimension(65, 65));

        SeventhAnswer.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        SeventhAnswer.setMaximumSize(new java.awt.Dimension(65, 65));
        SeventhAnswer.setMinimumSize(new java.awt.Dimension(65, 65));
        SeventhAnswer.setPreferredSize(new java.awt.Dimension(65, 65));

        EighthAnswer.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        EighthAnswer.setMaximumSize(new java.awt.Dimension(65, 65));
        EighthAnswer.setMinimumSize(new java.awt.Dimension(65, 65));
        EighthAnswer.setPreferredSize(new java.awt.Dimension(65, 65));

        Fbtn.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        Fbtn.setMaximumSize(new java.awt.Dimension(75, 50));
        Fbtn.setMinimumSize(new java.awt.Dimension(75, 50));
        Fbtn.setPreferredSize(new java.awt.Dimension(75, 50));
        Fbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FbtnActionPerformed(evt);
            }
        });

        Hbtn.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        Hbtn.setMaximumSize(new java.awt.Dimension(75, 50));
        Hbtn.setMinimumSize(new java.awt.Dimension(75, 50));
        Hbtn.setPreferredSize(new java.awt.Dimension(75, 50));
        Hbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HbtnActionPerformed(evt);
            }
        });

        Jbtn.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        Jbtn.setMaximumSize(new java.awt.Dimension(75, 50));
        Jbtn.setMinimumSize(new java.awt.Dimension(75, 50));
        Jbtn.setPreferredSize(new java.awt.Dimension(75, 50));
        Jbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbtnActionPerformed(evt);
            }
        });

        Kbtn.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        Kbtn.setMaximumSize(new java.awt.Dimension(75, 50));
        Kbtn.setMinimumSize(new java.awt.Dimension(75, 50));
        Kbtn.setPreferredSize(new java.awt.Dimension(75, 50));
        Kbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KbtnActionPerformed(evt);
            }
        });

        Lbtn.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        Lbtn.setMaximumSize(new java.awt.Dimension(75, 50));
        Lbtn.setMinimumSize(new java.awt.Dimension(75, 50));
        Lbtn.setPreferredSize(new java.awt.Dimension(75, 50));
        Lbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LbtnActionPerformed(evt);
            }
        });

        Nbtn.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        Nbtn.setMaximumSize(new java.awt.Dimension(75, 50));
        Nbtn.setMinimumSize(new java.awt.Dimension(75, 50));
        Nbtn.setPreferredSize(new java.awt.Dimension(75, 50));
        Nbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NbtnActionPerformed(evt);
            }
        });

        Pbtn.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        Pbtn.setMaximumSize(new java.awt.Dimension(75, 50));
        Pbtn.setMinimumSize(new java.awt.Dimension(75, 50));
        Pbtn.setPreferredSize(new java.awt.Dimension(75, 50));
        Pbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PbtnActionPerformed(evt);
            }
        });

        Qbtn.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        Qbtn.setMaximumSize(new java.awt.Dimension(75, 50));
        Qbtn.setMinimumSize(new java.awt.Dimension(75, 50));
        Qbtn.setPreferredSize(new java.awt.Dimension(75, 50));
        Qbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QbtnActionPerformed(evt);
            }
        });

        Rbtn.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        Rbtn.setMaximumSize(new java.awt.Dimension(75, 50));
        Rbtn.setMinimumSize(new java.awt.Dimension(75, 50));
        Rbtn.setPreferredSize(new java.awt.Dimension(75, 50));
        Rbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RbtnActionPerformed(evt);
            }
        });

        Sbtn.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        Sbtn.setMaximumSize(new java.awt.Dimension(75, 50));
        Sbtn.setMinimumSize(new java.awt.Dimension(75, 50));
        Sbtn.setPreferredSize(new java.awt.Dimension(75, 50));
        Sbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SbtnActionPerformed(evt);
            }
        });

        Tbtn.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        Tbtn.setMaximumSize(new java.awt.Dimension(75, 50));
        Tbtn.setMinimumSize(new java.awt.Dimension(75, 50));
        Tbtn.setPreferredSize(new java.awt.Dimension(75, 50));
        Tbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TbtnActionPerformed(evt);
            }
        });

        Ybtn.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        Ybtn.setMaximumSize(new java.awt.Dimension(75, 50));
        Ybtn.setMinimumSize(new java.awt.Dimension(75, 50));
        Ybtn.setPreferredSize(new java.awt.Dimension(75, 50));
        Ybtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YbtnActionPerformed(evt);
            }
        });

        Unbtn.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        Unbtn.setText("?");
        Unbtn.setMaximumSize(new java.awt.Dimension(75, 50));
        Unbtn.setMinimumSize(new java.awt.Dimension(75, 50));
        Unbtn.setPreferredSize(new java.awt.Dimension(75, 50));
        Unbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UnbtnActionPerformed(evt);
            }
        });

        labelF.setFont(new java.awt.Font("メイリオ", 0, 36)); // NOI18N
        labelF.setText("F");

        LabelK.setFont(new java.awt.Font("メイリオ", 0, 36)); // NOI18N
        LabelK.setText("K");

        LabelP.setFont(new java.awt.Font("メイリオ", 0, 36)); // NOI18N
        LabelP.setText("P");

        LabelS.setFont(new java.awt.Font("メイリオ", 0, 36)); // NOI18N
        LabelS.setText("S");

        LabelH.setFont(new java.awt.Font("メイリオ", 0, 36)); // NOI18N
        LabelH.setText("H");

        LabelL.setFont(new java.awt.Font("メイリオ", 0, 36)); // NOI18N
        LabelL.setText("L");

        LabelQ.setFont(new java.awt.Font("メイリオ", 0, 36)); // NOI18N
        LabelQ.setText("Q");

        LabelT.setFont(new java.awt.Font("メイリオ", 0, 36)); // NOI18N
        LabelT.setText("T");

        LAbelJ.setFont(new java.awt.Font("メイリオ", 0, 36)); // NOI18N
        LAbelJ.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LAbelJ.setText("J");

        LabelN.setFont(new java.awt.Font("メイリオ", 0, 36)); // NOI18N
        LabelN.setText("N");

        LabelR.setFont(new java.awt.Font("メイリオ", 0, 36)); // NOI18N
        LabelR.setText("R");

        LabelY.setFont(new java.awt.Font("メイリオ", 0, 36)); // NOI18N
        LabelY.setText("Y");

        javax.swing.GroupLayout RecallScreenLayout = new javax.swing.GroupLayout(RecallScreen);
        RecallScreen.setLayout(RecallScreenLayout);
        RecallScreenLayout.setHorizontalGroup(
            RecallScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Kyouji1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(Kyouji2, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(RecallScreenLayout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(Fbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(labelF)
                .addGap(79, 79, 79)
                .addComponent(Hbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(LabelH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(Jbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(LAbelJ, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(RecallScreenLayout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(Kbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(LabelK)
                .addGap(76, 76, 76)
                .addComponent(Lbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(LabelL)
                .addGap(57, 57, 57)
                .addComponent(Nbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(LabelN, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(RecallScreenLayout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(Pbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(LabelP)
                .addGap(79, 79, 79)
                .addComponent(Qbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(LabelQ, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(Rbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(LabelR, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(RecallScreenLayout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(Sbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(LabelS)
                .addGap(77, 77, 77)
                .addComponent(Tbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(LabelT)
                .addGap(54, 54, 54)
                .addComponent(Ybtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(LabelY, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(RecallScreenLayout.createSequentialGroup()
                .addGap(347, 347, 347)
                .addComponent(Unbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(RecallScreenLayout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(FirstAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(SecondAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(ThirdAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(FourthAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(FifthAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(SixthAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(SeventhAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(EighthAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(RecallScreenLayout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addComponent(ResetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100)
                .addComponent(OKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        RecallScreenLayout.setVerticalGroup(
            RecallScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RecallScreenLayout.createSequentialGroup()
                .addComponent(Kyouji1)
                .addGap(6, 6, 6)
                .addComponent(Kyouji2)
                .addGap(5, 5, 5)
                .addGroup(RecallScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Fbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelF)
                    .addComponent(Hbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelH)
                    .addComponent(LAbelJ)
                    .addComponent(Jbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(RecallScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Kbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelK)
                    .addComponent(Lbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelL)
                    .addComponent(Nbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelN))
                .addGap(20, 20, 20)
                .addGroup(RecallScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(RecallScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Pbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(LabelP)
                        .addComponent(Rbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(RecallScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(LabelQ, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(Qbtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(RecallScreenLayout.createSequentialGroup()
                        .addComponent(LabelR)
                        .addGap(2, 2, 2)))
                .addGap(20, 20, 20)
                .addGroup(RecallScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Sbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelS)
                    .addComponent(LabelT)
                    .addComponent(Tbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ybtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelY))
                .addGap(20, 20, 20)
                .addComponent(Unbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(RecallScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FirstAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SecondAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ThirdAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FourthAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FifthAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SixthAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SeventhAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EighthAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(RecallScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ResetButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OKButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        MemOnlyFeedbackPanel.setMaximumSize(new java.awt.Dimension(800, 600));
        MemOnlyFeedbackPanel.setMinimumSize(new java.awt.Dimension(800, 600));
        MemOnlyFeedbackPanel.setPreferredSize(new java.awt.Dimension(800, 600));

        FBText.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        FBText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        Accuracy.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        Accuracy.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        Warning.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        Warning.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout MemOnlyFeedbackPanelLayout = new javax.swing.GroupLayout(MemOnlyFeedbackPanel);
        MemOnlyFeedbackPanel.setLayout(MemOnlyFeedbackPanelLayout);
        MemOnlyFeedbackPanelLayout.setHorizontalGroup(
            MemOnlyFeedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FBText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
            .addComponent(Accuracy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Warning, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        MemOnlyFeedbackPanelLayout.setVerticalGroup(
            MemOnlyFeedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MemOnlyFeedbackPanelLayout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(FBText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Accuracy, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Warning, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        CharPanel.setMaximumSize(new java.awt.Dimension(800, 600));
        CharPanel.setMinimumSize(new java.awt.Dimension(800, 600));

        SpanChar.setFont(new java.awt.Font("メイリオ", 0, 48)); // NOI18N
        SpanChar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout CharPanelLayout = new javax.swing.GroupLayout(CharPanel);
        CharPanel.setLayout(CharPanelLayout);
        CharPanelLayout.setHorizontalGroup(
            CharPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SpanChar, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );
        CharPanelLayout.setVerticalGroup(
            CharPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SpanChar, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(MOnlyQPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(MOnlyAnsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(MOnlyFBPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(MOnlyResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(RecallScreen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(MemOnlyFeedbackPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(CharPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(MOnlyQPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(MOnlyAnsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(MOnlyFBPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(MOnlyResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(RecallScreen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(MemOnlyFeedbackPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(CharPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MathIncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MathIncActionPerformed
        ResultProcess(1);
        MOnlyFBPanel.setVisible(false);
        TimeLimit.stop();
    }//GEN-LAST:event_MathIncActionPerformed

    private void MathCorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MathCorActionPerformed
        ResultProcess(0);
        MOnlyFBPanel.setVisible(false);
        TimeLimit.stop();
    }//GEN-LAST:event_MathCorActionPerformed

    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
        //System.out.println(Integer.toString(MemAns));
        //System.out.println(ShowString);
        //System.out.println(AnsString);
        //System.out.println(ShowString.length());
        BtnAns = 1;
        RecallScreen.setVisible(false);
        MemOnlyFeedbackPanel.setVisible(true);
        CharCalc();
        Accur = (int)(((TrialNum - ErrNum) / TrialNum) * 100);
        System.out.println(ShowString);
        FBText.setText("あなたは" + SpanCount + "文字中" + Score + "文字思い出しました");
        Accuracy.setText("現在の正答率は" + Accur + "%です");

        if (Accur < 85) {
            Warning.setText("正答率が85%を下回っています");
            Warning.setForeground(Color.red);
        }else{
            Warning.setText(" ");
        }
        ResetAnswer();
        ResetValue();
        NextTrial.start();
    }//GEN-LAST:event_OKButtonActionPerformed

    private void ResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetButtonActionPerformed
        ResetAnswer();
    }//GEN-LAST:event_ResetButtonActionPerformed

    private void FbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FbtnActionPerformed
        Fbtn.setText(Integer.toString(BtnAns)); //SetTextしてからMemAns+1をしないと数字がずれる
        ShowAns(MemAns, "F");
    }//GEN-LAST:event_FbtnActionPerformed

    private void HbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HbtnActionPerformed
        Hbtn.setText(Integer.toString(BtnAns));
        ShowAns(MemAns, "H");
    }//GEN-LAST:event_HbtnActionPerformed

    private void JbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbtnActionPerformed
        Jbtn.setText(Integer.toString(BtnAns));
        ShowAns(MemAns, "J");
    }//GEN-LAST:event_JbtnActionPerformed

    private void KbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KbtnActionPerformed
        Kbtn.setText(Integer.toString(BtnAns));
        ShowAns(MemAns, "K");
    }//GEN-LAST:event_KbtnActionPerformed

    private void LbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LbtnActionPerformed
        Lbtn.setText(Integer.toString(BtnAns));
        ShowAns(MemAns,"L");
    }//GEN-LAST:event_LbtnActionPerformed

    private void NbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NbtnActionPerformed
        Nbtn.setText(Integer.toString(BtnAns));
        ShowAns(MemAns, "N");
    }//GEN-LAST:event_NbtnActionPerformed

    private void PbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PbtnActionPerformed
        Pbtn.setText(Integer.toString(BtnAns));
        ShowAns(MemAns, "P");
    }//GEN-LAST:event_PbtnActionPerformed

    private void QbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QbtnActionPerformed
        Qbtn.setText(Integer.toString(BtnAns));
        ShowAns(MemAns, "Q");
    }//GEN-LAST:event_QbtnActionPerformed

    private void RbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RbtnActionPerformed
        Rbtn.setText(Integer.toString(BtnAns));
        ShowAns(MemAns, "R");
    }//GEN-LAST:event_RbtnActionPerformed

    private void SbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SbtnActionPerformed
        Sbtn.setText(Integer.toString(BtnAns));
        ShowAns(MemAns, "S");
    }//GEN-LAST:event_SbtnActionPerformed

    private void TbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TbtnActionPerformed
        Tbtn.setText(Integer.toString(BtnAns));
        ShowAns(MemAns, "T");
    }//GEN-LAST:event_TbtnActionPerformed

    private void YbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YbtnActionPerformed
        Ybtn.setText(Integer.toString(BtnAns));
        ShowAns(MemAns, "Y");
    }//GEN-LAST:event_YbtnActionPerformed

    private void UnbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UnbtnActionPerformed
        ShowAns(MemAns, "?"); //?はボタン内の文字を変更しない
    }//GEN-LAST:event_UnbtnActionPerformed
    public void ResultProcess(int Num){
        CalcTime = System.currentTimeMillis() - PresentTime;
        sum += CalcTime; //合計
        //System.out.println(CalcTime);
        sumx2+= CalcTime * CalcTime; //2乗の合計

        if ((int) molist.get(MathOnlyTrial) <= 49 && Num == 0){
            MathFeedBack(0);
        }
        if ((int) molist.get(MathOnlyTrial) <= 49 && Num == 1){
            MathFeedBack(1);
        }
        if ((int) molist.get(MathOnlyTrial) > 50 && Num == 0){
            MathFeedBack(1);
        }
        if ((int) molist.get(MathOnlyTrial) > 50 && Num == 1){
            MathFeedBack(0);
        }
        MathOnlyTrial = MathOnlyTrial + 1;
        Outputs.append(CalcTime);
        String ls = System.getProperty("line.separator");
        Outputs.append(ls);
    }

    public void MathFeedBack(int ans){
        if (ans == 0){
            MOnlyAnsPanel.setVisible(false);
            MOnlyFBPanel.setVisible(true);
            //MOnlyFB.setText("正解です");
            MOnlyFB.setText(" ");
            MathOnlyCount = MathOnlyCount + 1;
            Outputs.append(MathOnlyCount);
            Outputs.append(" ");
            TrialNum = TrialNum + 1;
            FeedBack.start();
        }else{
            MOnlyAnsPanel.setVisible(false);
            MOnlyFBPanel.setVisible(true);
            //MOnlyFB.setText("間違いです");
            MOnlyFB.setText(" ");
            TrialNum = TrialNum + 1;
            Outputs.append(MathOnlyCount);
            Outputs.append(" ");
            ErrNum = ErrNum + 1;
            FeedBack.start();
        }
    }

    private static List ShuffleMathOnly(){
        ArrayList<Integer> list = new ArrayList<Integer>();
        for (int i = 0; i <= 99; i++){
            list.add(i);
        }
        //System.out.println(list);
        Collections.shuffle(list);
        //System.out.println(list);
        return list;
    }

    //引数で指定した配列をシャッフルする**********
    public static void SpanShuffle(int[] arr){
        for(int i=arr.length-1; i>0; i--){
            int t = (int)(Math.random() * i);  //0～i-1の中から適当に選ぶ

            //選ばれた値と交換する
            int tmp = arr[i];
            arr[i]  = arr[t];
            arr[t]  = tmp;
        }
    }


    public void QPrintMOnly(int i){
        //0-49は正解，
        //50-99は間違い
        MathOnlyArray[0] = "8÷(12-11)=?";
        MathOnlyArray[1] = "(10÷2)+20=?";
        MathOnlyArray[2] = "13+(2÷1)=?";
        MathOnlyArray[3] = "(4+2)×3=?";
        MathOnlyArray[4] = "(17-12)×8=?";
        MathOnlyArray[5] = "(45-17)÷7=?";
        MathOnlyArray[6] = "(36÷9)+18=?";
        MathOnlyArray[7] = "27÷(12-9)=?";
        MathOnlyArray[8] = "2×(19-18)=?";
        MathOnlyArray[9] = "(5÷5)-10=?";
        MathOnlyArray[10] = "(63÷9)+11=?";
        MathOnlyArray[11] = "17+(81÷9)=?";
        MathOnlyArray[12] = "49÷(15-8)=?";
        MathOnlyArray[13] = "12-(27÷9)=?";
        MathOnlyArray[14] = "17+(12÷2)=?";
        MathOnlyArray[15] = "4÷(2+0)=?";
        MathOnlyArray[16] = "9÷(20-11)=?";
        MathOnlyArray[17] = "(71-8)÷7=?";
        MathOnlyArray[18] = "(16-11)×7=?";
        MathOnlyArray[19] = "16-(7÷1)=?";
        MathOnlyArray[20] = "8×(6+3)=?";
        MathOnlyArray[21] = "2×(15-11)=?";
        MathOnlyArray[22] = "(11-8)÷1=?";
        MathOnlyArray[23] = "8×(2+1)=?";
        MathOnlyArray[24] = "(2+2)×8=?";
        MathOnlyArray[25] = "(4÷4)-4=?";
        MathOnlyArray[26] = "72÷(7+2)=?";
        MathOnlyArray[27] = "(18-12)×1=?";
        MathOnlyArray[28] = "(37-9)÷4=?";
        MathOnlyArray[29] = "4×(19-16)=?";
        MathOnlyArray[30] = "15-(45÷9)=?";
        MathOnlyArray[31] = "(15-9)÷3=?";
        MathOnlyArray[32] = "7+(36÷4)=?";
        MathOnlyArray[33] = "1×(1+3)=?";
        MathOnlyArray[34] = "18-(15÷5)=?";
        MathOnlyArray[35] = "(1+3)×6=?";
        MathOnlyArray[36] = "(54÷6)+5=?";
        MathOnlyArray[37] = "(3+3)÷2=?";
        MathOnlyArray[38] = "49÷(9-2)=?";
        MathOnlyArray[39] = "(15-13)×4=?";
        MathOnlyArray[40] = "(37+8)÷5=?";
        MathOnlyArray[41] = "18+(32÷4)=?";
        MathOnlyArray[42] = "(34-7)÷3=?";
        MathOnlyArray[43] = "45÷(2+7)=?";
        MathOnlyArray[44] = "(15÷5)+17=?";
        MathOnlyArray[45] = "45÷(14-9)=?";
        MathOnlyArray[46] = "8×(3+5)=?";
        MathOnlyArray[47] = "14+(18÷3)=?";
        MathOnlyArray[48] = "(54÷9)+18=?";
        MathOnlyArray[49] = "(48÷6)-3=?";
        MathOnlyArray[50] = "(6÷1)-18=?";
        MathOnlyArray[51] = "(56÷8)-6=?";
        MathOnlyArray[52] = "(9+7)÷8=?";
        MathOnlyArray[53] = "12÷(14-8)=?";
        MathOnlyArray[54] = "(36÷6)-3=?";
        MathOnlyArray[55] = "3÷(0+1)=?";
        MathOnlyArray[56] = "(9+3)÷3=?";
        MathOnlyArray[57] = "(11+9)÷5=?";
        MathOnlyArray[58] = "(48÷6)-4=?";
        MathOnlyArray[59] = "(16-14)×2=?";
        MathOnlyArray[60] = "13-(64÷8)=?";
        MathOnlyArray[61] = "(12+8)÷4=?";
        MathOnlyArray[62] = "18÷(2+1)=?";
        MathOnlyArray[63] = "(67-13)÷9=?";
        MathOnlyArray[64] = "30÷(3+2)=?";
        MathOnlyArray[65] = "3+(25÷5)=?";
        MathOnlyArray[66] = "(14-10)×2=?";
        MathOnlyArray[67] = "1×(7+2)=?";
        MathOnlyArray[68] = "45÷(14-9)=?";
        MathOnlyArray[69] = "(13+5)÷2=?";
        MathOnlyArray[70] = "5×(1+1)=?";
        MathOnlyArray[71] = "18-(21÷3)=?";
        MathOnlyArray[72] = "(13-6)×2=?";
        MathOnlyArray[73] = "3×(3+2)=?";
        MathOnlyArray[74] = "(3+1)×4=?";
        MathOnlyArray[75] = "20-(9÷3)=?";
        MathOnlyArray[76] = "(8÷8)+16=?";
        MathOnlyArray[77] = "14+(32÷8)=?";
        MathOnlyArray[78] = "7×(11-8)=?";
        MathOnlyArray[79] = "(18÷9)+20=?";
        MathOnlyArray[80] = "17+(14÷2)=?";
        MathOnlyArray[81] = "3×(19-11)=?";
        MathOnlyArray[82] = "(20-14)×5=?";
        MathOnlyArray[83] = "(3+5)×5=?";
        MathOnlyArray[84] = "6×(12-5)=?";
        MathOnlyArray[85] = "(1+6)×6=?";
        MathOnlyArray[86] = "8×(2+4)=?";
        MathOnlyArray[87] = "(5+1)×8=?";
        MathOnlyArray[88] = "(2+4)÷3=?";
        MathOnlyArray[89] = "(44-8)÷6=?";
        MathOnlyArray[90] = "6÷(1+1)=?";
        MathOnlyArray[91] = "20-(56÷7)=?";
        MathOnlyArray[92] = "30÷(12-7)=?";
        MathOnlyArray[93] = "3×(15-7)=?";
        MathOnlyArray[94] = "(18-3)÷3=?";
        MathOnlyArray[95] = "(8÷4)+11=?";
        MathOnlyArray[96] = "(9+31)÷5=?";
        MathOnlyArray[97] = "20-(10÷5)=?";
        MathOnlyArray[98] = "24÷(4+2)=?";
        MathOnlyArray[99] = "13+(12÷4)=?";

        MathOnlyQue.setText(MathOnlyArray[i]);
        //MathOnlyQue.setText("aaa");
    }

    public void APrintMOnly(int i){
        //0-49は正解，
        //50-99は間違い
        MathOnlyAns[0] = "8";
        MathOnlyAns[1] = "25";
        MathOnlyAns[2] = "15";
        MathOnlyAns[3] = "18";
        MathOnlyAns[4] = "40";
        MathOnlyAns[5] = "4";
        MathOnlyAns[6] = "22";
        MathOnlyAns[7] = "9";
        MathOnlyAns[8] = "2";
        MathOnlyAns[9] = "-9";
        MathOnlyAns[10] = "18";
        MathOnlyAns[11] = "26";
        MathOnlyAns[12] = "7";
        MathOnlyAns[13] = "9";
        MathOnlyAns[14] = "23";
        MathOnlyAns[15] = "2";
        MathOnlyAns[16] = "1";
        MathOnlyAns[17] = "9";
        MathOnlyAns[18] = "35";
        MathOnlyAns[19] = "9";
        MathOnlyAns[20] = "72";
        MathOnlyAns[21] = "8";
        MathOnlyAns[22] = "3";
        MathOnlyAns[23] = "24";
        MathOnlyAns[24] = "32";
        MathOnlyAns[25] = "-3";
        MathOnlyAns[26] = "8";
        MathOnlyAns[27] = "6";
        MathOnlyAns[28] = "7";
        MathOnlyAns[29] = "12";
        MathOnlyAns[30] = "10";
        MathOnlyAns[31] = "2";
        MathOnlyAns[32] = "16";
        MathOnlyAns[33] = "4";
        MathOnlyAns[34] = "4";
        MathOnlyAns[35] = "24";
        MathOnlyAns[36] = "14";
        MathOnlyAns[37] = "3";
        MathOnlyAns[38] = "7";
        MathOnlyAns[39] = "8";
        MathOnlyAns[40] = "9";
        MathOnlyAns[41] = "26";
        MathOnlyAns[42] = "9";
        MathOnlyAns[43] = "5";
        MathOnlyAns[44] = "20";
        MathOnlyAns[45] = "9";
        MathOnlyAns[46] = "64";
        MathOnlyAns[47] = "20";
        MathOnlyAns[48] = "24";
        MathOnlyAns[49] = "5";
        MathOnlyAns[50] = "-9";
        MathOnlyAns[51] = "5";
        MathOnlyAns[52] = "5";
        MathOnlyAns[53] = "1";
        MathOnlyAns[54] = "6";
        MathOnlyAns[55] = "1";
        MathOnlyAns[56] = "8";
        MathOnlyAns[57] = "8";
        MathOnlyAns[58] = "3";
        MathOnlyAns[59] = "5";
        MathOnlyAns[60] = "3";
        MathOnlyAns[61] = "7";
        MathOnlyAns[62] = "10";
        MathOnlyAns[63] = "14";
        MathOnlyAns[64] = "4";
        MathOnlyAns[65] = "2";
        MathOnlyAns[66] = "17";
        MathOnlyAns[67] = "6";
        MathOnlyAns[68] = "4";
        MathOnlyAns[69] = "18";
        MathOnlyAns[70] = "15";
        MathOnlyAns[71] = "5";
        MathOnlyAns[72] = "19";
        MathOnlyAns[73] = "22";
        MathOnlyAns[74] = "9";
        MathOnlyAns[75] = "24";
        MathOnlyAns[76] = "21";
        MathOnlyAns[77] = "10";
        MathOnlyAns[78] = "18";
        MathOnlyAns[79] = "25";
        MathOnlyAns[80] = "18";
        MathOnlyAns[81] = "16";
        MathOnlyAns[82] = "26";
        MathOnlyAns[83] = "41";
        MathOnlyAns[84] = "40";
        MathOnlyAns[85] = "31";
        MathOnlyAns[86] = "49";
        MathOnlyAns[87] = "47";
        MathOnlyAns[88] = "4";
        MathOnlyAns[89] = "2";
        MathOnlyAns[90] = "7";
        MathOnlyAns[91] = "8";
        MathOnlyAns[92] = "9";
        MathOnlyAns[93] = "26";
        MathOnlyAns[94] = "8";
        MathOnlyAns[95] = "14";
        MathOnlyAns[96] = "2";
        MathOnlyAns[97] = "22";
        MathOnlyAns[98] = "3";
        MathOnlyAns[99] = "15";

        MathOnlyWhich.setText(MathOnlyAns[i]);
    }

    /**
    public void QPrintMOnly(int i){
        //0-9は正解，
        //10-19は間違い
        MathOnlyArray[0] = "17+(48÷8)=?";
        MathOnlyArray[1] = "(2+1)×7=?";
        MathOnlyArray[2] = "(44-12)÷4=?";
        MathOnlyArray[3] = "(13+22)÷7=?";
        MathOnlyArray[4] = "20+(56÷7)=?";
        MathOnlyArray[5] = "(21÷7)-2=?";
        MathOnlyArray[6] = "(5+3)÷8=?";
        MathOnlyArray[7] = "(1+4)×4=?";
        MathOnlyArray[8] = "(18-9)×7=?";
        MathOnlyArray[9] = "(11-7)×3=?";
        MathOnlyArray[10] = "(12÷3)-2=?";
        MathOnlyArray[11] = "(12+6)÷6=?";
        MathOnlyArray[12] = "15÷(1+2)=?";
        MathOnlyArray[13] = "(43-13)÷6=?";
        MathOnlyArray[14] = "(16+12)÷4=?";
        MathOnlyArray[15] = "15-(42÷6)=?";
        MathOnlyArray[16] = "(13-7)×4=?";
        MathOnlyArray[17] = "(12-8)×6=?";
        MathOnlyArray[18] = "(6+2)×4=?";
        MathOnlyArray[19] = "7×(3+3)=?";

        MathOnlyQue.setText(MathOnlyArray[i]);
    }

    public void APrintMOnly(int i){
        //0-9は正解，
        //10-19は間違い
        MathOnlyAns[0] = "23";
        MathOnlyAns[1] = "21";
        MathOnlyAns[2] = "8";
        MathOnlyAns[3] = "5";
        MathOnlyAns[4] = "28";
        MathOnlyAns[5] = "1";
        MathOnlyAns[6] = "1";
        MathOnlyAns[7] = "20";
        MathOnlyAns[8] = "63";
        MathOnlyAns[9] = "12";
        MathOnlyAns[10] = "1";
        MathOnlyAns[11] = "11";
        MathOnlyAns[12] = "7";
        MathOnlyAns[13] = "8";
        MathOnlyAns[14] = "5";
        MathOnlyAns[15] = "15";
        MathOnlyAns[16] = "30";
        MathOnlyAns[17] = "20";
        MathOnlyAns[18] = "31";
        MathOnlyAns[19] = "37";

        MathOnlyWhich.setText(MathOnlyAns[i]);
    }
    **/


    public void ShowAns(int Ans, String Character){
        if (Ans == 1 && MemAns <= 8){
            FirstAnswer.setText(Character);
            MemAns = MemAns + 1;
            BtnAns = MemAns;
        }
        if (Ans == 2 && MemAns <= 8){
            SecondAnswer.setText(Character);
            MemAns = MemAns + 1;
            BtnAns = MemAns;
        }
        if (Ans == 3 && MemAns <= 8){
            ThirdAnswer.setText(Character);
            MemAns = MemAns + 1;
            BtnAns = MemAns;
        }
        if (Ans == 4 && MemAns <= 8){
            FourthAnswer.setText(Character);
            MemAns = MemAns + 1;
            BtnAns = MemAns;
        }
        if (Ans == 5 && MemAns <= 8){
            FifthAnswer.setText(Character);
            MemAns = MemAns + 1;
            BtnAns = MemAns;
        }
        if (Ans == 6 && MemAns <= 8){
            SixthAnswer.setText(Character);
            MemAns = MemAns + 1;
            BtnAns = MemAns;
        }
        if (Ans == 7 && MemAns <= 8){
            SeventhAnswer.setText(Character);
            MemAns = MemAns + 1;
            BtnAns = MemAns;
        }
        if (Ans == 8){
            EighthAnswer.setText(Character);
            MemAns = MemAns + 1;
        }
        if (MemAns <= 9){ //CharCalc用にMemAnsを8から9に変更した
            if (AnsString.length() <= 8){
            AnsString.append(String.format("%s", Character));
            System.out.println(AnsString);
            }
        }
    }

    public void ResetAnswer() {
        FirstAnswer.setText("");
        SecondAnswer.setText("");
        ThirdAnswer.setText("");
        FourthAnswer.setText("");
        FifthAnswer.setText("");
        SixthAnswer.setText("");
        SeventhAnswer.setText("");
        EighthAnswer.setText("");
        Fbtn.setText("");
        Hbtn.setText("");
        Jbtn.setText("");
        Kbtn.setText("");
        Lbtn.setText("");
        Nbtn.setText("");
        Pbtn.setText("");
        Qbtn.setText("");
        Rbtn.setText("");
        Sbtn.setText("");
        Tbtn.setText("");
        Ybtn.setText("");
        MemAns = 1;
        BtnAns = 1;
        AnsString.setLength(0);
    }

    public void CharCalc(){
        if (AnsString.length() <= ShowString.length()){
            AnsSmaller();
        }else
        {
            ShowSmaller();
        }
        //System.out.println(Score);
        String ls = System.getProperty("line.separator");
        Outputs.append(ShowString);
        Outputs.append(" ");
        Outputs.append(AnsString);
        Outputs.append(" ");
        Outputs.append(Score);
        Outputs.append(ls);
    }

    public void AnsSmaller(){
        for(int i = 0; i < AnsString.length(); i++){
            if (AnsString.length() == 0){
                Score = 0;
            }else if (AnsString.charAt(i) == ShowString.charAt(i)){
                Score = Score + 1;
                OverallScore = OverallScore + 1;
            }
        }
        //System.out.println("AnsSmaller");
    }

    public void ShowSmaller(){
        for(int i = 0; i < ShowString.length(); i++){
            if (AnsString.length() == 0){
                Score = 0;
            }else if (ShowString.charAt(i) == AnsString.charAt(i)){
                Score = Score + 1;
                OverallScore = OverallScore + 1;
            }
        }
        //System.out.println("ShowSmaller");
    }

    public void ResetValue(){
        ShowString.setLength(0);
        AnsString.setLength(0);
        SpanCount = 0;
        Score = 0;
    }

    private static List ShuffleTest(){
        ArrayList<Integer> list = new ArrayList<Integer>();
        for (int i = 0; i <= 11; i++){
            list.add(i);
        }
        //System.out.println(list);
        Collections.shuffle(list);
        //System.out.println(list);
        return list;
    }

    public void PrintChar(int i){
        CharArray[0] = "F";
        CharArray[1] = "H";
        CharArray[2] = "J";
        CharArray[3] = "K";
        CharArray[4] = "L";
        CharArray[5] = "N";
        CharArray[6] = "P";
        CharArray[7] = "Q";
        CharArray[8] = "R";
        CharArray[9] = "S";
        CharArray[10] = "T";
        CharArray[11] = "Y";

        SpanChar.setText(CharArray[i]);
        ShowString.append(String.format("%s", CharArray[i]));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Trial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Trial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Trial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Trial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Trial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Accuracy;
    private javax.swing.JPanel CharPanel;
    private javax.swing.JLabel EighthAnswer;
    private javax.swing.JLabel FBText;
    private javax.swing.JButton Fbtn;
    private javax.swing.JLabel FifthAnswer;
    private javax.swing.JLabel FirstAnswer;
    private javax.swing.JLabel FourthAnswer;
    private javax.swing.JButton Hbtn;
    private javax.swing.JButton Jbtn;
    private javax.swing.JButton Kbtn;
    private javax.swing.JLabel Kyouji1;
    private javax.swing.JLabel Kyouji2;
    private javax.swing.JLabel LAbelJ;
    private javax.swing.JLabel LabelH;
    private javax.swing.JLabel LabelK;
    private javax.swing.JLabel LabelL;
    private javax.swing.JLabel LabelN;
    private javax.swing.JLabel LabelP;
    private javax.swing.JLabel LabelQ;
    private javax.swing.JLabel LabelR;
    private javax.swing.JLabel LabelS;
    private javax.swing.JLabel LabelT;
    private javax.swing.JLabel LabelY;
    private javax.swing.JButton Lbtn;
    private javax.swing.JPanel MOnlyAnsPanel;
    private javax.swing.JLabel MOnlyFB;
    private javax.swing.JPanel MOnlyFBPanel;
    private javax.swing.JPanel MOnlyQPanel;
    private javax.swing.JPanel MOnlyResult;
    private javax.swing.JLabel MOnlyResultSum;
    private javax.swing.JButton MathCor;
    private javax.swing.JButton MathInc;
    private javax.swing.JLabel MathOnlyQue;
    private javax.swing.JLabel MathOnlyWhich;
    private javax.swing.JPanel MemOnlyFeedbackPanel;
    private javax.swing.JButton Nbtn;
    private javax.swing.JButton OKButton;
    private javax.swing.JButton Pbtn;
    private javax.swing.JButton Qbtn;
    private javax.swing.JButton Rbtn;
    private javax.swing.JPanel RecallScreen;
    private javax.swing.JButton ResetButton;
    private javax.swing.JButton Sbtn;
    private javax.swing.JLabel SecondAnswer;
    private javax.swing.JLabel SeventhAnswer;
    private javax.swing.JLabel SixthAnswer;
    private javax.swing.JLabel SpanChar;
    private javax.swing.JButton Tbtn;
    private javax.swing.JLabel ThirdAnswer;
    private javax.swing.JButton Unbtn;
    private javax.swing.JLabel Warning;
    private javax.swing.JButton Ybtn;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel labelF;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        if (TestNum == 4 && MathAnsFlag == 1){
            MOnlyQPanel.removeMouseListener(this);
            MOnlyQPanel.setVisible(false);
            MOnlyAnsPanel.setVisible(true);
            int PrintCount = (int) molist.get(MathOnlyTrial);
            APrintMOnly(PrintCount);
            SpanChar.setText(" "); //消しておかないと次の試行に残る
        }
        if (TestNum == 4 && MathOnlyTrial == 0){
            MOnlyResult.removeMouseListener(this);
            MOnlyResult.setVisible(false);
            MathOnlyCount = 0;
            SpanChar.setText(" "); //消しておかないと次の試行に残る
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseExited(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        String cmd = e.getActionCommand();
        if(cmd.equals("OneSecond")){
            //System.out.println("O");
            OneSecond.stop();
            TimeLimit.start();
            CharPanel.setVisible(false);
            if (TestNum == 4 && MathAnsFlag == 0){
                MOnlyQPanel.setVisible(true);
                //System.out.println(molist.get(MathOnlyTrial));
                int PrintCount = (int) molist.get(MathOnlyTrial);
                QPrintMOnly(PrintCount);
                Outputs.append(PrintCount);
                Outputs.append(" ");
                //PresenT.start();
                MOnlyQPanel.addMouseListener(this);
                MathAnsFlag = 1;
                PresentTime = System.currentTimeMillis();
            }
        }
        if(cmd.equals("FeedBack")){
            if (TestNum == 4 && MathAnsFlag == 1){
                FeedBack.stop();

                int PrintCount = (int) list.get(SpanCount);
                //System.out.println(SpanCount);
                PrintChar(PrintCount);
                CharPanel.setVisible(true);
                //OneSecond.start();
                PresenT.start();
                MathAnsFlag = 0;
            }
            /**
            if (TestNum == 3 && MathOnlyTrial == 6){
                FeedBack.stop();
                ave= sum/15;
                vari = sumx2/15 - ave*ave;
                stdev = Math.sqrt(vari);
                System.out.println(ave);
                System.out.println(stdev);
                MOnlyResult.setVisible(true);
                MOnlyResult.addMouseListener(this);
                MOnlyResultSum.setText("あなたは" + MathOnlyTrial + "問中" + MathOnlyCount + "問正解しました");
                MathOnlyTrial = 0;
                //MathOnlyCount = 0;
                TestNum = TestNum + 1; //計算練習終了
            }
            **/
        }
        if(cmd.equals("PresenT")){
            if (TestNum == 4){
                PresenT.stop();
//                int PrintCount = (int) list.get(SpanCount);
//                System.out.println(SpanCount);
//                PrintChar(PrintCount);
                SpanCount = SpanCount + 1;
                CharPanel.setVisible(false);
                OneSecond.start();
            }
            if (TestNum == 4 && SpanCount == CurCount[MemOnlyTrial]){
                PresenT.stop();
                AfterPresent.start();
            }
        }
        if(cmd.equals("AfterPresent0")){
            AfterPresent0.stop();
            AfterPresent.start();
            if (TimeOver == 1){
                TimeOver = 0;
            }
            CharPanel.setVisible(false);
            SpanChar.setText(" "); //消しておかないと次の試行に残る
        }
        if(cmd.equals("AfterPresent")){
            OneSecond.stop();
            AfterPresent.stop();
            CharPanel.setVisible(false);
            RecallScreen.setVisible(true);
            SpanChar.setText(""); //消しておかないと次の試行に残る
        }
        if(cmd.equals("NextTrial")){
            if (TestNum == 4){
                NextTrial.stop();
                MemOnlyFeedbackPanel.setVisible(false);
                list = ShuffleTest();
                MemOnlyTrial = MemOnlyTrial + 1;
                OneSecond.start();
            }
            if (TestNum == 4 && MemOnlyTrial > 17){
                OneSecond.stop();
                NextTrial.stop();
                TestNum = TestNum + 1;
                try{
                    File file = new File(SubNum.SubjectNumber + ".txt");
                    FileWriter filewriter = new FileWriter(file, true);
                    filewriter.write(Outputs.toString());
                    filewriter.write("Score" + OverallScore);
                    filewriter.close();
                }catch(IOException error){
                    System.out.println(error);
                }
                FinishIns ref = new FinishIns();
                ref.setVisible(true);
                ref.setLocationRelativeTo(null);
                dispose();
            }
        }
        if(cmd.equals("TimeLimit")){
            OneSecond.stop();
            TimeLimit.stop();
            MOnlyQPanel.setVisible(false);
            //MOnlyAnsPanel.setVisible(true);
            MOnlyAnsPanel.setVisible(false);
            //MOnlyFBPanel.setVisible(true);
            MOnlyFBPanel.setVisible(false);
            MOnlyQPanel.removeMouseListener(this);
            MOnlyResult.setVisible(false); //!!
            MathAnsFlag = 1;
            TrialNum = TrialNum + 1;
            Outputs.append(MathOnlyCount);
            Outputs.append(" ");
            ErrNum = ErrNum + 1;
            Outputs.append("-");
            String ls = System.getProperty("line.separator");
            Outputs.append(ls);
            //MathFeedBack(1);
            //MOnlyFBPanel.setVisible(false);
            //int PrintCount = (int) list.get(SpanCount);
            //System.out.println(SpanCount);
            //PrintChar(PrintCount);
            //CharPanel.setVisible(true);
            //OneSecond.start();
            FeedBack.start();
            MathOnlyTrial = MathOnlyTrial + 1;
            TimeOver = 1;
        }
    }
}
