/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package jospan;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

/**
 *
 * @author admini
 */
public class MathTest extends javax.swing.JFrame implements MouseListener, ActionListener{
    javax.swing.Timer OneSecond, PresenT, AfterPresent, FeedBack;
    int TestNum = 2; //1:記銘のみ，2:計算のみ, 3:Span2の練習，4:本番
    int MathOnlyTrial = 0; //計算のみの試行番号
    int MathOnlyCount = 0; //計算のみ練習の得点
    int MathAnsFlag = 0;//計算の答えがわかったら1になる
    long PresentTime = 0;//計算問題の提示開始時間
    long CalcTime = 0;//計算問題に答え終わった時間
    double sum,sumx2,ave,vari,stdev;
    List molist; //ランダム用の配列。ShuffleTestで使う
    String[] MathOnlyArray = new String[20];
    String[] MathOnlyAns = new String[20];
    StringBuilder AnsString = new StringBuilder();
    StringBuilder ShowString = new StringBuilder();
    StringBuilder Outputs = new StringBuilder();

    /**
     * Creates new form MathTest
     */
    public MathTest() {
        initComponents();
        MOnlyQPanel.setVisible(false);
        MOnlyAnsPanel.setVisible(false);
        jButton1.setVisible(false); //練習終了時に提示されるボタン
        OneSecond = new javax.swing.Timer(1000, this);
        OneSecond.setActionCommand("OneSecond");//actionPerformed内での識別用文字列
        PresenT = new javax.swing.Timer(800, this);
        PresenT.setActionCommand("PresenT");
        AfterPresent = new javax.swing.Timer(800, this);
        AfterPresent.setActionCommand("AfterPresent");
        FeedBack = new javax.swing.Timer(2000, this);
        FeedBack.setActionCommand("FeedBack");
        molist = ShuffleMathOnly();
        OneSecond.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MOnlyQPanel = new javax.swing.JPanel();
        MathOnlyQue = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        MOnlyAnsPanel = new javax.swing.JPanel();
        MathOnlyWhich = new javax.swing.JLabel();
        MathInc = new javax.swing.JButton();
        MathCor = new javax.swing.JButton();
        MOnlyFBPanel = new javax.swing.JPanel();
        MOnlyFB = new javax.swing.JLabel();
        MOnlyResult = new javax.swing.JPanel();
        MOnlyResultSum = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);

        MOnlyQPanel.setMaximumSize(new java.awt.Dimension(800, 600));
        MOnlyQPanel.setMinimumSize(new java.awt.Dimension(800, 600));

        MathOnlyQue.setFont(new java.awt.Font("メイリオ", 0, 36)); // NOI18N
        MathOnlyQue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel15.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("答えがわかったらクリックしてください");

        javax.swing.GroupLayout MOnlyQPanelLayout = new javax.swing.GroupLayout(MOnlyQPanel);
        MOnlyQPanel.setLayout(MOnlyQPanelLayout);
        MOnlyQPanelLayout.setHorizontalGroup(
            MOnlyQPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MathOnlyQue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );
        MOnlyQPanelLayout.setVerticalGroup(
            MOnlyQPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MOnlyQPanelLayout.createSequentialGroup()
                .addComponent(MathOnlyQue, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addGap(0, 157, Short.MAX_VALUE))
        );

        MOnlyAnsPanel.setMaximumSize(new java.awt.Dimension(800, 600));
        MOnlyAnsPanel.setMinimumSize(new java.awt.Dimension(800, 600));

        MathOnlyWhich.setFont(new java.awt.Font("メイリオ", 0, 36)); // NOI18N
        MathOnlyWhich.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        MathInc.setFont(new java.awt.Font("メイリオ", 0, 48)); // NOI18N
        MathInc.setText("×");
        MathInc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MathIncActionPerformed(evt);
            }
        });

        MathCor.setFont(new java.awt.Font("メイリオ", 0, 48)); // NOI18N
        MathCor.setText("○");
        MathCor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MathCorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MOnlyAnsPanelLayout = new javax.swing.GroupLayout(MOnlyAnsPanel);
        MOnlyAnsPanel.setLayout(MOnlyAnsPanelLayout);
        MOnlyAnsPanelLayout.setHorizontalGroup(
            MOnlyAnsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MathOnlyWhich, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MOnlyAnsPanelLayout.createSequentialGroup()
                .addContainerGap(160, Short.MAX_VALUE)
                .addComponent(MathCor, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120)
                .addComponent(MathInc, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(160, 160, 160))
        );
        MOnlyAnsPanelLayout.setVerticalGroup(
            MOnlyAnsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MOnlyAnsPanelLayout.createSequentialGroup()
                .addComponent(MathOnlyWhich, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(MOnlyAnsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MathInc, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MathCor, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 82, Short.MAX_VALUE))
        );

        MOnlyFBPanel.setMaximumSize(new java.awt.Dimension(800, 600));
        MOnlyFBPanel.setMinimumSize(new java.awt.Dimension(800, 600));

        MOnlyFB.setFont(new java.awt.Font("メイリオ", 0, 36)); // NOI18N
        MOnlyFB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout MOnlyFBPanelLayout = new javax.swing.GroupLayout(MOnlyFBPanel);
        MOnlyFBPanel.setLayout(MOnlyFBPanelLayout);
        MOnlyFBPanelLayout.setHorizontalGroup(
            MOnlyFBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MOnlyFB, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );
        MOnlyFBPanelLayout.setVerticalGroup(
            MOnlyFBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MOnlyFB, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );

        MOnlyResult.setMaximumSize(new java.awt.Dimension(800, 600));
        MOnlyResult.setMinimumSize(new java.awt.Dimension(800, 600));

        MOnlyResultSum.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        MOnlyResultSum.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jButton1.setFont(new java.awt.Font("メイリオ", 0, 24)); // NOI18N
        jButton1.setText("クリックすると次に進みます");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MOnlyResultLayout = new javax.swing.GroupLayout(MOnlyResult);
        MOnlyResult.setLayout(MOnlyResultLayout);
        MOnlyResultLayout.setHorizontalGroup(
            MOnlyResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MOnlyResultSum, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
            .addGroup(MOnlyResultLayout.createSequentialGroup()
                .addGap(228, 228, 228)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MOnlyResultLayout.setVerticalGroup(
            MOnlyResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MOnlyResultLayout.createSequentialGroup()
                .addComponent(MOnlyResultSum, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84)
                .addComponent(jButton1)
                .addGap(0, 121, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(MOnlyQPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(MOnlyAnsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(MOnlyFBPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(MOnlyResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(MOnlyQPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(MOnlyAnsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(MOnlyFBPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(MOnlyResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MathIncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MathIncActionPerformed
        ResultProcess(1);
    }//GEN-LAST:event_MathIncActionPerformed

    private void MathCorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MathCorActionPerformed
        ResultProcess(0);
    }//GEN-LAST:event_MathCorActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        PracticeIns ref = new PracticeIns();
        ref.setVisible(true);
        ref.setLocationRelativeTo(null);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    public void ResultProcess(int Num){
        CalcTime = System.currentTimeMillis() - PresentTime;
        sum += CalcTime; //合計
        System.out.println(CalcTime);
        sumx2+= CalcTime * CalcTime; //2乗の合計

        if ((int) molist.get(MathOnlyTrial) <= 9 && Num == 0){
            MathFeedBack(0);
        }
        if ((int) molist.get(MathOnlyTrial) <= 9 && Num == 1){
            MathFeedBack(1);
        }
        if ((int) molist.get(MathOnlyTrial) > 9 && Num == 0){
            MathFeedBack(1);
        }
        if ((int) molist.get(MathOnlyTrial) > 9 && Num == 1){
            MathFeedBack(0);
        }
        MathOnlyTrial = MathOnlyTrial + 1;
        Outputs.append(CalcTime);
        String ls = System.getProperty("line.separator");
        Outputs.append(ls);
    }

    public void MathFeedBack(int ans){
        if (ans == 0){
            MOnlyAnsPanel.setVisible(false);
            MOnlyFBPanel.setVisible(true);
            MOnlyFB.setText("正解です");
            MathOnlyCount = MathOnlyCount + 1;
            Outputs.append(MathOnlyCount);
            Outputs.append(" ");
            FeedBack.start();
        }else{
            MOnlyAnsPanel.setVisible(false);
            MOnlyFBPanel.setVisible(true);
            MOnlyFB.setText("間違いです");
            Outputs.append(MathOnlyCount);
            Outputs.append(" ");
            FeedBack.start();
        }
    }

    private static List ShuffleMathOnly(){
        ArrayList<Integer> list = new ArrayList<Integer>();
        for (int i = 0; i <= 19; i++){
            list.add(i);
        }
        //System.out.println(list);
        Collections.shuffle(list);
        //System.out.println(list);
        return list;
    }
    public void QPrintMOnly(int i){
        //0-9は正解，
        //10-19は間違い
        MathOnlyArray[0] = "17+(48÷8)=?";
        MathOnlyArray[1] = "(2+1)×7=?";
        MathOnlyArray[2] = "(44-12)÷4=?";
        MathOnlyArray[3] = "(13+22)÷7=?";
        MathOnlyArray[4] = "20+(56÷7)=?";
        MathOnlyArray[5] = "(21÷7)-2=?";
        MathOnlyArray[6] = "(5+3)÷8=?";
        MathOnlyArray[7] = "(1+4)×4=?";
        MathOnlyArray[8] = "(18-9)×7=?";
        MathOnlyArray[9] = "(11-7)×3=?";
        MathOnlyArray[10] = "(12÷3)-2=?";
        MathOnlyArray[11] = "(12+6)÷6=?";
        MathOnlyArray[12] = "15÷(1+2)=?";
        MathOnlyArray[13] = "(43-13)÷6=?";
        MathOnlyArray[14] = "(16+12)÷4=?";
        MathOnlyArray[15] = "15-(42÷6)=?";
        MathOnlyArray[16] = "(13-7)×4=?";
        MathOnlyArray[17] = "(12-8)×6=?";
        MathOnlyArray[18] = "(6+2)×4=?";
        MathOnlyArray[19] = "7×(3+3)=?";

        MathOnlyQue.setText(MathOnlyArray[i]);
    }

    public void APrintMOnly(int i){
        //0-9は正解，
        //10-19は間違い
        MathOnlyAns[0] = "23";
        MathOnlyAns[1] = "21";
        MathOnlyAns[2] = "8";
        MathOnlyAns[3] = "5";
        MathOnlyAns[4] = "28";
        MathOnlyAns[5] = "1";
        MathOnlyAns[6] = "1";
        MathOnlyAns[7] = "20";
        MathOnlyAns[8] = "63";
        MathOnlyAns[9] = "12";
        MathOnlyAns[10] = "1";
        MathOnlyAns[11] = "11";
        MathOnlyAns[12] = "7";
        MathOnlyAns[13] = "8";
        MathOnlyAns[14] = "5";
        MathOnlyAns[15] = "15";
        MathOnlyAns[16] = "30";
        MathOnlyAns[17] = "20";
        MathOnlyAns[18] = "31";
        MathOnlyAns[19] = "37";

        MathOnlyWhich.setText(MathOnlyAns[i]);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MathTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MathTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MathTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MathTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MathTest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MOnlyAnsPanel;
    private javax.swing.JLabel MOnlyFB;
    private javax.swing.JPanel MOnlyFBPanel;
    private javax.swing.JPanel MOnlyQPanel;
    private javax.swing.JPanel MOnlyResult;
    private javax.swing.JLabel MOnlyResultSum;
    private javax.swing.JButton MathCor;
    private javax.swing.JButton MathInc;
    private javax.swing.JLabel MathOnlyQue;
    private javax.swing.JLabel MathOnlyWhich;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel15;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        if (TestNum == 2 && MathAnsFlag == 1){
            MOnlyQPanel.removeMouseListener(this);
            MOnlyQPanel.setVisible(false);
            MOnlyAnsPanel.setVisible(true);
            int PrintCount = (int) molist.get(MathOnlyTrial);
            APrintMOnly(PrintCount);
        }
        if (TestNum == 3 && MathOnlyTrial == 0){
            MOnlyResult.removeMouseListener(this);
            MOnlyResult.setVisible(false);
            MathOnlyCount = 0;
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseExited(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        String cmd = e.getActionCommand();
        if(cmd.equals("OneSecond")){
            //System.out.println("O");
            OneSecond.stop();
            if (TestNum == 2 && MathAnsFlag == 0){
                MOnlyQPanel.setVisible(true);
                int PrintCount = (int) molist.get(MathOnlyTrial);
                QPrintMOnly(PrintCount);
                Outputs.append(PrintCount);
                Outputs.append(" ");
                //PresenT.start();
                MOnlyQPanel.addMouseListener(this);
                MathAnsFlag = 1;
                PresentTime = System.currentTimeMillis();
            }
        }
        if(cmd.equals("FeedBack")){
            if (TestNum == 2 && MathAnsFlag == 1){
                FeedBack.stop();
                MOnlyFBPanel.setVisible(false);
                OneSecond.start();
                MathAnsFlag = 0;
            }
            if (TestNum == 2 && MathOnlyTrial == 5){//5回に変更
                FeedBack.stop();
                ave= sum/15;
                vari = sumx2/15 - ave*ave;
                stdev = Math.sqrt(vari);
                System.out.println(ave);
                System.out.println(stdev);
                SubNum.TimeLimit = (int)(ave + 2.5*stdev);
                MOnlyResult.setVisible(true);
                jButton1.setVisible(true); //練習終了時に提示されるボタン
                //MOnlyResult.addMouseListener(this);
                MOnlyResultSum.setText("あなたは" + MathOnlyTrial + "問中" + MathOnlyCount + "問正解しました");
                MathOnlyTrial = 0;
                //MathOnlyCount = 0;
                TestNum = TestNum + 1; //計算練習終了
                try{
                    String ls = System.getProperty("line.separator");
                    File file = new File(SubNum.SubjectNumber + ".txt");
                    FileWriter filewriter = new FileWriter(file, true);
                    filewriter.write(Outputs.toString());
                    filewriter.write((int)ave + " " + (int)stdev + " " + SubNum.TimeLimit + ls);
                    filewriter.close();
                }catch(IOException error){
                    System.out.println(error);
                }
            }
        }
    }

}
